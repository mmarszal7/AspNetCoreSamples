@page
<div>
    <h2 class="text-center" style="margin-top: 0; padding-top: 30px; padding-bottom: 30px;">Azure SignalR Group Chat</h2>

    <div class="container" style="height: calc(100% - 110px);">
        <div id="messages" style="background-color: whitesmoke; "></div>

        <div class="input-prepend input-append" style="padding-bottom: 5px; padding-top: 5px;">
            <input type="text" id="message" style="width: 50%; padding: 5px 10px;"
                   placeholder="Type message and press Enter to send...">
            <button class="btn-success" id="echo">Echo</button>
            <button class="btn-success" id="sendmessage">Broadcast</button>
        </div>

        <div class="input-prepend input-append" style="padding-bottom: 5px; padding-top: 5px;">
            <input type="text" id="groupoperationname" style="width: 50%; padding: 5px 10px;"
                   placeholder="Type group name">
            <button class="btn-success" id="joingroup">Join Group</button>
            <button class="btn-success" id="leavegroup">Leave Group</button>
        </div>

        <div class="input-prepend input-append" style="padding-bottom: 5px; padding-top: 5px;">
            <input type="text" id="groupname" style="width: 50%; padding: 5px 10px; "
                   placeholder="Type group name, if send to groups, separate with comma">
            <button class="btn-success" id="sendgroups">Send to Groups</button>
            <button class="btn-success" id="sendgroup">Send to Group</button>
        </div>

        <div class="input-prepend input-append" style="padding-bottom: 5px; padding-top: 5px;">
            <input type="text" id="username" style="width: 50%; padding: 5px 10px; "
                   placeholder="Type user name, if send to users, separate with comma">
            <button class="btn-success" id="senduser">Send to User</button>
            <button class="btn-success" id="sendusers">Send to Users</button>
        </div>
    </div>

    <script>
        var username = `cookie-${Math.random().toString(36).substring(2, 10)}`;
        var connection = new signalR.HubConnectionBuilder().withUrl("/advancedHub").build();
        connection.on("ReceiveMessage", messageHandler);
        connection.on("_BROADCAST_", messageHandler);
        connection.on("_SYSTEM_", messageHandler);
        connection.user = username;
        connection.start();

        function messageHandler(user, message) {
            console.log("Message: " + message);
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var messageEntry = createMessageEntry(user, msg);
            var messageBox = document.getElementById('messages');
            messageBox.appendChild(messageEntry);
            messageBox.scrollTop = messageBox.scrollHeight;
        }

        var messageInput = document.getElementById('message');
        var groupOperationInput = document.getElementById('groupoperationname');
        var groupInput = document.getElementById('groupname');
        var userInput = document.getElementById('username');
        messageInput.focus();

        function createMessageEntry(encodedName, encodedMsg) {
            console.log("Message from: " + encodedName);
            var entry = document.createElement('div');
            entry.classList.add("message-entry");
            if (encodedName === "_SYSTEM_") {
                entry.innerHTML = encodedMsg;
                entry.classList.add("text-center");
                entry.classList.add("system-message");
            } else if (encodedName === "_BROADCAST_") {
                entry.classList.add("text-center");
                entry.innerHTML = `<div class="text-center broadcast-message">${encodedMsg}</div>`;
            } else if (encodedName === username) {
                entry.innerHTML = `<div class="message-avatar pull-right">${encodedName}</div>` +
                    `<div class="message-content pull-right">${encodedMsg}<div>`;
            } else {
                entry.innerHTML = `<div class="message-avatar pull-left">${encodedName}</div>` +
                    `<div class="message-content pull-left">${encodedMsg}<div>`;
            }
            return entry;
        }

        document.getElementById('sendmessage').addEventListener('click', function (event) {
            if (messageInput.value) {
                connection.invoke("BroadcastMessage", username, messageInput.value);
            }

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });
        document.getElementById('message').addEventListener('keypress', function (event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                document.getElementById('sendmessage').click();
                return false;
            }
        });
        document.getElementById('echo').addEventListener('click', function (event) {
            connection.invoke("Echo", username, messageInput.value);

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });

        // Group join/leave operations
        document.getElementById('joingroup').addEventListener('click', function (event) {
            if (groupOperationInput.value) {
                connection.invoke("JoinGroup", username, groupOperationInput.value);
            }

            groupOperationInput.value = '';
            groupOperationInput.focus();
            event.preventDefault();
        });
        document.getElementById('leavegroup').addEventListener('click', function (event) {
            if (groupOperationInput.value) {
                connection.invoke("LeaveGroup", username, groupOperationInput.value);
            }

            groupOperationInput.value = '';
            groupOperationInput.focus();
            event.preventDefault();
        });

        // Send to Group/Groups
        document.getElementById('sendgroup').addEventListener('click', function (event) {
            if (groupInput.value && messageInput.value) {
                connection.invoke("SendGroup", username, groupInput.value, messageInput.value);
            }

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });
        document.getElementById('sendgroups').addEventListener('click', function (event) {
            if (groupInput.value && messageInput.value) {
                connection.invoke("SendGroups", username, groupInput.value.split(","), messageInput.value);
            }

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });

        // Send to User/Users
        document.getElementById('senduser').addEventListener('click', function (event) {
            if (userInput.value && messageInput.value) {
                connection.invoke("SendUser", username, userInput.value, messageInput.value);
            }

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });
        document.getElementById('sendusers').addEventListener('click', function (event) {
            if (userInput.value && messageInput.value) {
                connection.invoke("SendUsers", username, userInput.value.split(","), messageInput.value);
            }

            messageInput.value = '';
            messageInput.focus();
            event.preventDefault();
        });
    </script>
</div>


