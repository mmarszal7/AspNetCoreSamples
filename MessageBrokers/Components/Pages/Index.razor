@page "/"
@using MediatR
@using MessageBrokers.Notifications
@inject IMediator Mediator

<section id="main" role="main">
    <div class="chat">
        <i class="avatar face12"></i>
        <input type="text" placeholder="Type your message..." bind="@messageInput" />
        <button onclick="@SendMessage">Send</button>
    </div>

    <p class="presence"></p>
    <div class="output">
        @foreach (var message in messages)
        {
            <p><i class="material-icons">home</i><span>@message</span></p>
        }
    </div>
</section>

@functions {

    string messageInput = "";

    List<string> messages = new List<string>();

    protected override async Task OnAfterRenderAsync()
    {
        await Mediator.Publish(new SubscribeOnQueueCommand() { QueueName = "demoQueue", Callback = Callback });
    }

    void SendMessage()
    {
        Mediator.Publish(new SendMessageToQueueCommand() { QueueName = "demoQueue", Message = messageInput });
    }

    void Callback(string message)
    {
        messages.Add(message);
    }
}
